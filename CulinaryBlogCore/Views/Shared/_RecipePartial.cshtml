@model CulinaryBlogCore.Models.RecipeViewModels.RecipeDetailsViewModel;

@{
    string currentUserId = (string)ViewData["CurrentUserId"];
    string userRatingClass = Model.UserRating == 0 ? "rating" : "rating-already";
    bool isNotOwner = User.Identity.IsAuthenticated && currentUserId != Model.UserId;
    bool isAdminOrOwner = User.IsInRole("Admin") || Model.UserId == currentUserId;
}

<article>
    <h2>@Model.Name</h2>
    <div class="receipt-header">
        <ul>
            <li>
                <h4>Preparation</h4>
                <i class="far fa-clock"></i>
                <span>@Model.PreparationTime.ToString("hh:mm") min</span>
            </li>
            <li>
                <h4>Cooking</h4>
                <i class="fas fa-cookie-bite"></i>
                <span>@Model.CookingTime.ToString("hh:mm") min</span>
            </li>
            <li>
                <h4>Portions</h4>
                <i class="fas fa-coffee"></i>
                <span>@Model.Portions</span>
            </li>
        </ul>
        <div class="votes">
            <p class="@userRatingClass">
                @if (isNotOwner && Model.UserRating == 0)
                {
                    <span class="ratring-stars" data-recipe-id="@Model.Id">
                        @for (int i = 5; i >= 1; i--)
                        {
                            <span class="rating-star" data-rating="@i">☆</span>
                        }
                    </span>
                }
                else if (isNotOwner)
                {
                    @for (int i = 1; i <= 5; i++)
                    {
                        <span class="rating-blocked">
                            @if (i <= Model.UserRating)
                            {
                                <text>★</text>
                            }
                            else
                            {
                                <text>☆</text>
                            }
                        </span>
                    }
                }
                else
                {
                    <span class="rating-text">Rating: </span>
                }
                <span class="recipe-vote">@Model.Rating (@Model.VoteCount)</span>
                <p>
                    <i class="fas fa-eye"></i> @Model.ViewCount views
                </p>
            </p>
        </div>
    </div>
    <div class="receipt-main">
        <div class="receipt-main-image">
            <img src="@Model.ImagePath" alt="salad-healthy">
        </div>
        <div class="receipt-main-products">
            <h4>
                @if (isAdminOrOwner)
                {
                    <i class="add-product-button fas fa-cart-plus"></i>
                }
                Products:
            </h4>
            <ol class="ol-products">
                @foreach (var product in Model.Products)
                {
                    <li value="@product.Id">
                        @if (isAdminOrOwner)
                        {
                            <span class="remove-product-confirm" data-toggle="modal" data-target="#deleteProductModal">
                                <i class="fas fa-trash"></i>
                            </span>
                        }
                        else
                        {
                            <i class="fas fa-circle"></i>
                        }
                        @product.Name
                    </li>
                }
            </ol>
            @if (isAdminOrOwner)
            {
                <div class="add-product-block">
                    <input type="text" class="product-input" />
                    <input type="hidden" class="recipe-id" value="@Model.Id" />
                    <button class="product-add"><i class="fas fa-plus"></i></button>
                    <p class="error-message-details">Product name cannot be empty!</p>
                </div>
            }
        </div>
    </div>
    <div class="receipt-content">
        <h4>Receipt:</h4>
        <p>@Model.Description</p>
    </div>
</article>